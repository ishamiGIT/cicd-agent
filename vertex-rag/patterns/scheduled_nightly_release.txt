name: "Scheduled Nightly Release"
description: "A pattern where code is built and tested on every push, but a release is only created at a fixed time (e.g., nightly) for deployment to a staging environment."

applicability:
  triggers: ["schedule", "time-based"]
  deployment_style: "automated_scheduled"
  use_case_keywords: ["nightly builds", "integration environments", "timed release"]

# "components" is replaced by the more descriptive "stages"
stages:
  # The CI stage runs on every commit
  ci:
    id: "ci_trigger_step"
    name: "Cloud Build CI Trigger"
    type: "cloud-build"
    details: "Listens for commits on the main branch. Runs build, lint, and tests. Pushes the container image to Artifact Registry."
  
  # The CD stage is a single workflow that runs on a schedule
  cd:
    trigger: # Explicitly define how this entire stage is triggered
      type: "schedule"
      details: "This stage is initiated by a nightly scheduled event."
    steps: # The list of sequential steps within the CD stage
      - id: "scheduler_step"
        name: "Cloud Scheduler Job"
        type: "cloud-scheduler"
        details: "A cron job configured to run at a specified time invokes the `release_trigger_step`"
      - id: "release_trigger_step"
        name: "Cloud Build Release Trigger"
        type: "cloud-build"
        details: "Triggered by the Cloud Scheduler job. It finds the latest successful container image and creates a new release in Cloud Deploy."
      - id: "deploy_pipeline_step"
        name: "Cloud Deploy Pipeline"
        type: "cloud-deploy"
        details: "Manages the rollout of the nightly release to the 'staging' environment."

tradeoffs:
  pros:
    - "Predictable release cadence."
    - "Allows for a full day of commits to be tested together."
  cons:
    - "A single bad commit can block the nightly release for everyone."