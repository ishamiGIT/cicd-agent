# docker-compose.yml
version: '3.8'

services:
  # This is your CI/CD Agent
  cicd-agent:
    build:
      context: ./agent_root
      dockerfile: Dockerfile
    image: cicd-agent:latest
    container_name: service-cicd-agent
    ports:
      - "8082:8080"
    networks:
      - my-app-network
    volumes:
      # Mounts your gcloud config from the host into the container
      - ~/.config/gcloud:/root/.config/gcloud
      # Mounts the current directory on the host to /data in the container
      - './:/data'
    environment:
      # Sets the path for Google Application Credentials inside the container
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
      # Your existing environment variable
      - DEVOPS_MCP_URL=http://devops-mcp:9000/mcp
      - WEAVIATE_URL=http://weaviate:8080
      - WORKING_DIR=/data
    depends_on:
      - devops-mcp
      #- weaviate

  # This is your Dev ops mcp server
  devops-mcp:
    build:
      context: ./devops-mcp-server
      dockerfile: Dockerfile
    image: devops-mcp:latest
    container_name: service-devops-mcp
    # Corrected port mapping from previous example
    ports:
      - "9000:9000"
    networks:
      - my-app-network
    volumes:
      # Mounts your gcloud config from the host into the container
      - ~/.config/gcloud:/root/.config/gcloud
    environment:
      # Sets the path for Google Application Credentials inside the container
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
  

  # This is your Dev ops mcp server
  rag-mcp:
    build:
      context: ./py-mcp-qdrant-rag
      dockerfile: Dockerfile
    image: rag-mcp:latest
    container_name: service-rag-mcp
    # Corrected port mapping from previous example
    ports:
      - "8082:8082"
    networks:
      - my-app-network
    volumes:
      # Mounts your gcloud config from the host into the container
      - ~/.config/gcloud:/root/.config/gcloud
    environment:
      # Sets the path for Google Application Credentials inside the container
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
    depends_on:
      - ollama
      - qdrant
  
  ollama:
    image: ollama/ollama
    container_name: ollama
    post_start:
      - command: |
          ollama pull nomic-embed-text
    ports:
      - "11434:11434" # Default Ollama port
    volumes:
      - ollama_data:/root/.ollama # Persist model data

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-db
    ports:
      - "6333:6333" # Qdrant HTTP API
      - "6334:6334" # Qdrant gRPC API
    volumes:
      - qdrant_data:/qdrant/storage

# Define the custom network
networks:
  my-app-network:
    driver: bridge

volumes:  
  ollama_data:
  qdrant_data:
